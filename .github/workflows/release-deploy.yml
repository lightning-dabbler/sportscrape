name: Release deploy

on:
  pull_request:
    branches:
      - main
    types: [closed]

jobs:
  validate-release-branch-format:
    name: Validate branch format release/v*.*.*
    if: startsWith(github.head_ref, 'release/v') && contains(github.head_ref, '.')
    runs-on: ubuntu-latest
    outputs:
      branch_version: ${{ steps.extract_version.outputs.version }}
    steps:
      - id: extract_version
        name: Extract version from branch name
        env:
          HEAD_REF: ${{ github.head_ref }}
        run: |
          BRANCH_VERSION=$(echo "$HEAD_REF" | cut -d'/' -f2)
          echo "version=$BRANCH_VERSION" >> $GITHUB_OUTPUT
          echo "Branch version: $BRANCH_VERSION"

  build-binary:
    needs: validate-release-branch-format
    uses: ./.github/workflows/build-binary.yml

  require-bump:
    if: ${{ needs.build-binary.outputs.tool_binary_successfully_built }}
    uses: ./.github/workflows/require-bump.yml
    needs:
      - build-binary

  validate-branch-semver:
    name: Check branch SemVer matches version
    outputs:
      green_light: ${{steps.output.outputs.green_light}}
    if: ${{ needs.require-bump.outputs.is_bumped_already }}
    needs:
      - require-bump
      - validate-release-branch-format
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0
      - name: Download tools binary
        uses: ./.github/actions/download-tools-binary
      - name: Validate version matches
        id: validate_version
        run: |
          BRANCH_VERSION="${{ needs.validate-release-branch-format.outputs.branch_version }}"
          TOOL_VERSION=$(bin/tools version | tr -d '\n\r')

          echo "Branch version: $BRANCH_VERSION"
          echo "Tool version: $TOOL_VERSION"

          if [[ "$TOOL_VERSION" == "$BRANCH_VERSION" ]]; then
            echo "✅ Version match confirmed"
          else
            echo "❌ Version mismatch"
            exit 1
          fi
      - name: outputs
        id: output
        if: ${{!cancelled()}}
        env:
          WORKFLOW_SUCCESS: "${{ steps.validate_version.outcome }}"
        run: |
          if [[ "$WORKFLOW_SUCCESS" == "success" ]]; then
            echo "green_light=true"
            echo "green_light=true" >> $GITHUB_OUTPUT
          else
            echo "green_light=false"
            echo "green_light=false" >> $GITHUB_OUTPUT
          fi

  on-merge-job:
    if: ${{github.event.pull_request.merged == true && needs.validate-branch-semver.outputs.green_light}}
    needs:
      - validate-branch-semver
    runs-on: ubuntu-latest
    name: Release branch deploy on merge
    outputs:
      green_light: ${{steps.output.outputs.green_light}}
    steps:
      - name: outputs
        id: output
        run: |
          echo "green_light=true"
          echo "green_light=true" >> $GITHUB_OUTPUT

  tests:
    if: ${{needs.on-merge-job.outputs.green_light}}
    needs:
      - on-merge-job
    uses: ./.github/workflows/all-tests.yml

  validate:
    if: ${{needs.on-merge-job.outputs.green_light}}
    needs:
      - on-merge-job
    uses: ./.github/workflows/validate.yml

  approval:
    if: ${{ needs.validate.outputs.successful_pre_commit_run && needs.validate.outputs.successful_go_lint_run && needs.tests.outputs.successful_run}}
    needs:
      - tests
      - validate
    name: Approval gate for tag and release
    environment: tag-release
    runs-on: ubuntu-latest
    outputs:
      green_light: ${{steps.output.outputs.green_light}}
    steps:
      - name: outputs
        id: output
        run: |
          echo "green_light=true"
          echo "green_light=true" >> $GITHUB_OUTPUT

  build-deploy-tag:
    if: ${{ needs.approval.outputs.green_light }}
    needs:
      - approval
    permissions:
      contents: write
    uses: ./.github/workflows/tag-release.yml
