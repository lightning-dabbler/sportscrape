name: Tag and release

on:
  workflow_call:
    inputs:
      skip-binary-build:
        description: 'Skip build-binary indicator'
        required: false
        type: boolean
        default: false

jobs:
  build-binary:
    if: ${{ !inputs.skip-binary-build }}
    uses: ./.github/workflows/build-binary.yml

  require-bump:
    if: ${{ inputs.skip-binary-build || needs.build-binary.outputs.tool_binary_successfully_built }}
    needs: build-binary
    uses: ./.github/workflows/require-bump.yml

  tag-release:
    if: ${{ needs.require-bump.outputs.is_bumped_already }}
    needs: require-bump
    runs-on: ubuntu-latest
    name: Tag and release
    outputs:
      successful_tag_release: ${{steps.output.outputs.successful_tag_release}}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0
      - name: Download tools binary
        uses: ./.github/actions/download-tools-binary
      - name: Create tag
        run: |
          bin/tools git create-tag
      - name: Push tag
        id: push_tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          bin/tools git push-tag --use-github-token
      - name: outputs
        id: output
        env:
          WORKFLOW_SUCCESS: "${{ steps.push_tag.outcome }}"
        run: |
          if [[ "$WORKFLOW_SUCCESS" == "success" ]]; then
            echo "successful_tag_release=true"
            echo "successful_tag_release=true" >> $GITHUB_OUTPUT
          else
            echo "successful_tag_release=false"
            echo "successful_tag_release=false" >> $GITHUB_OUTPUT
          fi

  go-package-deploy:
    if: ${{ needs.tag-release.outputs.successful_tag_release }}
    needs: tag-release
    name: Deploy package to pkg.go.dev
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0
      - name: Download tools binary
        uses: ./.github/actions/download-tools-binary
      - name: Set TOOLS_PACKAGE_VERSION in environment
        run: echo "TOOLS_PACKAGE_VERSION=$(bin/tools version)" >> $GITHUB_ENV
      - name: Log version to update with
        run: |
          echo "Uploading $TOOLS_PACKAGE_VERSION"
      - name: Update pkg.go.dev with version
        run: |
          curl https://sum.golang.org/lookup/github.com/lightning-dabbler/sportscrape@$TOOLS_PACKAGE_VERSION
